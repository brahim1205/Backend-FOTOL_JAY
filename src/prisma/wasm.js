
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.0
 * Query Engine version: c0aafc03b8ef6cdced8654b9a817999e02457d6a
 */
Prisma.prismaVersion = {
  client: "6.17.0",
  engine: "c0aafc03b8ef6cdced8654b9a817999e02457d6a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  role: 'role',
  reputation: 'reputation',
  isVip: 'isVip',
  registrationDate: 'registrationDate',
  lastLogin: 'lastLogin',
  phone: 'phone',
  firstName: 'firstName',
  lastName: 'lastName',
  profilePicture: 'profilePicture',
  location: 'location'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  price: 'price',
  images: 'images',
  status: 'status',
  sellerId: 'sellerId',
  views: 'views',
  publishDate: 'publishDate',
  expiration: 'expiration',
  renewalCount: 'renewalCount',
  location: 'location',
  category: 'category',
  condition: 'condition',
  categoryId: 'categoryId',
  locationId: 'locationId'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  payload: 'payload',
  read: 'read',
  createdAt: 'createdAt'
};

exports.Prisma.ChatMessageScalarFieldEnum = {
  id: 'id',
  fromUserId: 'fromUserId',
  toUserId: 'toUserId',
  productId: 'productId',
  message: 'message',
  createdAt: 'createdAt'
};

exports.Prisma.CreditScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  balance: 'balance'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  userId: 'userId',
  rating: 'rating',
  comment: 'comment',
  photos: 'photos',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FavoriteScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  userId: 'userId',
  createdAt: 'createdAt'
};

exports.Prisma.TransactionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  amount: 'amount',
  currency: 'currency',
  status: 'status',
  description: 'description',
  reference: 'reference',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  buyerId: 'buyerId',
  sellerId: 'sellerId',
  productId: 'productId',
  quantity: 'quantity',
  totalAmount: 'totalAmount',
  status: 'status',
  shippingAddress: 'shippingAddress',
  trackingNumber: 'trackingNumber',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  icon: 'icon',
  parentId: 'parentId',
  createdAt: 'createdAt'
};

exports.Prisma.LocationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  latitude: 'latitude',
  longitude: 'longitude',
  country: 'country',
  createdAt: 'createdAt'
};

exports.Prisma.AnalyticsEventScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  eventType: 'eventType',
  entityId: 'entityId',
  entityType: 'entityType',
  metadata: 'metadata',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  createdAt: 'createdAt'
};

exports.Prisma.DashboardMetricsScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  metricType: 'metricType',
  period: 'period',
  periodStart: 'periodStart',
  periodEnd: 'periodEnd',
  value: 'value',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ForumScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  categoryId: 'categoryId',
  locationId: 'locationId',
  isActive: 'isActive',
  createdAt: 'createdAt'
};

exports.Prisma.PostScalarFieldEnum = {
  id: 'id',
  forumId: 'forumId',
  authorId: 'authorId',
  title: 'title',
  content: 'content',
  isPinned: 'isPinned',
  isLocked: 'isLocked',
  views: 'views',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CommentScalarFieldEnum = {
  id: 'id',
  postId: 'postId',
  authorId: 'authorId',
  content: 'content',
  parentId: 'parentId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EventScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  type: 'type',
  startDate: 'startDate',
  endDate: 'endDate',
  isActive: 'isActive',
  discount: 'discount',
  targetUsers: 'targetUsers',
  metadata: 'metadata',
  createdAt: 'createdAt'
};

exports.Prisma.ReferralScalarFieldEnum = {
  id: 'id',
  referrerId: 'referrerId',
  referredId: 'referredId',
  code: 'code',
  status: 'status',
  rewardGiven: 'rewardGiven',
  createdAt: 'createdAt',
  completedAt: 'completedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  phone: 'phone',
  firstName: 'firstName',
  lastName: 'lastName',
  profilePicture: 'profilePicture',
  location: 'location'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.ProductOrderByRelevanceFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  sellerId: 'sellerId',
  location: 'location',
  category: 'category',
  condition: 'condition',
  categoryId: 'categoryId',
  locationId: 'locationId'
};

exports.Prisma.NotificationOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type'
};

exports.Prisma.ChatMessageOrderByRelevanceFieldEnum = {
  id: 'id',
  fromUserId: 'fromUserId',
  toUserId: 'toUserId',
  productId: 'productId',
  message: 'message'
};

exports.Prisma.CreditOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId'
};

exports.Prisma.ReviewOrderByRelevanceFieldEnum = {
  id: 'id',
  productId: 'productId',
  userId: 'userId',
  comment: 'comment'
};

exports.Prisma.FavoriteOrderByRelevanceFieldEnum = {
  id: 'id',
  productId: 'productId',
  userId: 'userId'
};

exports.Prisma.TransactionOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  currency: 'currency',
  status: 'status',
  description: 'description',
  reference: 'reference'
};

exports.Prisma.OrderOrderByRelevanceFieldEnum = {
  id: 'id',
  buyerId: 'buyerId',
  sellerId: 'sellerId',
  productId: 'productId',
  status: 'status',
  trackingNumber: 'trackingNumber',
  notes: 'notes'
};

exports.Prisma.CategoryOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  icon: 'icon',
  parentId: 'parentId'
};

exports.Prisma.LocationOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  country: 'country'
};

exports.Prisma.AnalyticsEventOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  eventType: 'eventType',
  entityId: 'entityId',
  entityType: 'entityType',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent'
};

exports.Prisma.DashboardMetricsOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  metricType: 'metricType',
  period: 'period'
};

exports.Prisma.ForumOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  categoryId: 'categoryId',
  locationId: 'locationId'
};

exports.Prisma.PostOrderByRelevanceFieldEnum = {
  id: 'id',
  forumId: 'forumId',
  authorId: 'authorId',
  title: 'title',
  content: 'content'
};

exports.Prisma.CommentOrderByRelevanceFieldEnum = {
  id: 'id',
  postId: 'postId',
  authorId: 'authorId',
  content: 'content',
  parentId: 'parentId'
};

exports.Prisma.EventOrderByRelevanceFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  type: 'type'
};

exports.Prisma.ReferralOrderByRelevanceFieldEnum = {
  id: 'id',
  referrerId: 'referrerId',
  referredId: 'referredId',
  code: 'code',
  status: 'status'
};
exports.RoleUtilisateur = exports.$Enums.RoleUtilisateur = {
  USER: 'USER',
  VIP: 'VIP',
  PRO: 'PRO',
  MODERATOR: 'MODERATOR',
  ADMIN: 'ADMIN'
};

exports.StatutProduit = exports.$Enums.StatutProduit = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  EXPIRED: 'EXPIRED',
  SOLD: 'SOLD'
};

exports.Prisma.ModelName = {
  User: 'User',
  Product: 'Product',
  Notification: 'Notification',
  ChatMessage: 'ChatMessage',
  Credit: 'Credit',
  Review: 'Review',
  Favorite: 'Favorite',
  Transaction: 'Transaction',
  Order: 'Order',
  Category: 'Category',
  Location: 'Location',
  AnalyticsEvent: 'AnalyticsEvent',
  DashboardMetrics: 'DashboardMetrics',
  Forum: 'Forum',
  Post: 'Post',
  Comment: 'Comment',
  Event: 'Event',
  Referral: 'Referral'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/cherif/Bureau/FootolJaay/backend/src/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/cherif/Bureau/FootolJaay/backend/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.17.0",
  "engineVersion": "c0aafc03b8ef6cdced8654b9a817999e02457d6a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/prisma\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum RoleUtilisateur {\n  USER\n  VIP\n  PRO\n  MODERATOR\n  ADMIN\n}\n\nenum StatutProduit {\n  PENDING\n  APPROVED\n  REJECTED\n  EXPIRED\n  SOLD\n}\n\nmodel User {\n  id               String          @id @default(cuid())\n  email            String          @unique\n  password         String\n  role             RoleUtilisateur @default(USER)\n  reputation       Int             @default(0)\n  isVip            Boolean         @default(false)\n  registrationDate DateTime        @default(now())\n  lastLogin        DateTime?\n  phone            String?\n  firstName        String?\n  lastName         String?\n  profilePicture   String?\n  location         String?\n\n  // Relations\n  products          Product[]\n  notifications     Notification[]\n  sentMessages      ChatMessage[]      @relation(\"FromUser\")\n  receivedMessages  ChatMessage[]      @relation(\"ToUser\")\n  credits           Credit?\n  reviews           Review[]\n  favorites         Favorite[]\n  transactions      Transaction[]\n  buyerOrders       Order[]            @relation(\"BuyerOrders\")\n  sellerOrders      Order[]            @relation(\"SellerOrders\")\n  analyticsEvents   AnalyticsEvent[]\n  dashboardMetrics  DashboardMetrics[]\n  posts             Post[]\n  comments          Comment[]\n  referrerReferrals Referral[]         @relation(\"ReferrerReferrals\")\n  referredReferrals Referral[]         @relation(\"ReferredReferrals\")\n\n  @@map(\"users\")\n}\n\nmodel Product {\n  id           String        @id @default(cuid())\n  title        String\n  description  String\n  price        Float\n  images       Json // Array of image URLs\n  status       StatutProduit @default(PENDING)\n  sellerId     String\n  views        Int           @default(0)\n  publishDate  DateTime      @default(now())\n  expiration   DateTime\n  renewalCount Int           @default(0) // Nombre de renouvellements effectués\n  location     String\n  category     String?\n  condition    String? // Neuf, Occasion, etc.\n  categoryId   String?\n  locationId   String?\n\n  // Relations\n  seller          User          @relation(fields: [sellerId], references: [id], onDelete: Cascade)\n  messages        ChatMessage[]\n  reviews         Review[]\n  favorites       Favorite[]\n  orders          Order[]\n  productCategory Category?     @relation(fields: [categoryId], references: [id])\n  productLocation Location?     @relation(fields: [locationId], references: [id])\n\n  @@map(\"products\")\n}\n\nmodel Notification {\n  id        String   @id @default(cuid())\n  userId    String\n  type      String // e.g., \"product_approved\", \"new_message\"\n  payload   Json // Additional data\n  read      Boolean  @default(false)\n  createdAt DateTime @default(now())\n\n  // Relations\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"notifications\")\n}\n\nmodel ChatMessage {\n  id         String   @id @default(cuid())\n  fromUserId String\n  toUserId   String\n  productId  String?\n  message    String\n  createdAt  DateTime @default(now())\n\n  // Relations\n  fromUser User     @relation(\"FromUser\", fields: [fromUserId], references: [id], onDelete: Cascade)\n  toUser   User     @relation(\"ToUser\", fields: [toUserId], references: [id], onDelete: Cascade)\n  product  Product? @relation(fields: [productId], references: [id], onDelete: SetNull)\n\n  @@map(\"chat_messages\")\n}\n\nmodel Credit {\n  id      String @id @default(cuid())\n  userId  String @unique\n  balance Int    @default(0)\n\n  // Relations\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"credits\")\n}\n\nmodel Review {\n  id        String   @id @default(cuid())\n  productId String\n  userId    String\n  rating    Int // 1-5 étoiles\n  comment   String?\n  photos    Json? // Array of photo URLs for review\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)\n  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([productId, userId]) // Un avis par utilisateur par produit\n  @@map(\"reviews\")\n}\n\nmodel Favorite {\n  id        String   @id @default(cuid())\n  productId String\n  userId    String\n  createdAt DateTime @default(now())\n\n  // Relations\n  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)\n  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([productId, userId]) // Un favori par utilisateur par produit\n  @@map(\"favorites\")\n}\n\nmodel Transaction {\n  id          String   @id @default(cuid())\n  userId      String\n  type        String // 'purchase', 'vip_subscription', 'credit_purchase', 'commission'\n  amount      Float\n  currency    String   @default(\"EUR\")\n  status      String   @default(\"pending\") // 'pending', 'completed', 'failed', 'refunded'\n  description String?\n  reference   String? // ID de transaction externe (Stripe, etc.)\n  metadata    Json? // Données supplémentaires\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  // Relations\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"transactions\")\n}\n\nmodel Order {\n  id              String   @id @default(cuid())\n  buyerId         String\n  sellerId        String\n  productId       String\n  quantity        Int      @default(1)\n  totalAmount     Float\n  status          String   @default(\"pending\") // 'pending', 'paid', 'shipped', 'delivered', 'cancelled'\n  shippingAddress Json? // Adresse de livraison\n  trackingNumber  String?\n  notes           String?\n  createdAt       DateTime @default(now())\n  updatedAt       DateTime @updatedAt\n\n  // Relations\n  buyer   User    @relation(\"BuyerOrders\", fields: [buyerId], references: [id], onDelete: Cascade)\n  seller  User    @relation(\"SellerOrders\", fields: [sellerId], references: [id], onDelete: Cascade)\n  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)\n\n  @@map(\"orders\")\n}\n\nmodel Category {\n  id          String   @id @default(cuid())\n  name        String   @unique\n  description String?\n  icon        String?\n  parentId    String?\n  createdAt   DateTime @default(now())\n\n  // Relations\n  parent   Category?  @relation(\"CategoryHierarchy\", fields: [parentId], references: [id])\n  children Category[] @relation(\"CategoryHierarchy\")\n  products Product[]\n  forums   Forum[]\n\n  @@map(\"categories\")\n}\n\nmodel Location {\n  id        String   @id @default(cuid())\n  name      String // Nom de la ville/région\n  latitude  Float?\n  longitude Float?\n  country   String   @default(\"France\")\n  createdAt DateTime @default(now())\n\n  // Relations\n  products Product[]\n  forums   Forum[]\n\n  @@map(\"locations\")\n}\n\nmodel AnalyticsEvent {\n  id         String   @id @default(cuid())\n  userId     String?\n  eventType  String // 'product_view', 'product_purchase', 'user_login', etc.\n  entityId   String? // ID du produit, utilisateur, etc.\n  entityType String? // 'product', 'user', 'category', etc.\n  metadata   Json? // Données supplémentaires\n  ipAddress  String?\n  userAgent  String?\n  createdAt  DateTime @default(now())\n\n  // Relations\n  user User? @relation(fields: [userId], references: [id], onDelete: SetNull)\n\n  @@map(\"analytics_events\")\n}\n\nmodel DashboardMetrics {\n  id          String   @id @default(cuid())\n  userId      String // Vendeur ou admin\n  metricType  String // 'sales', 'views', 'conversions', 'revenue'\n  period      String // 'daily', 'weekly', 'monthly'\n  periodStart DateTime\n  periodEnd   DateTime\n  value       Float\n  metadata    Json? // Données supplémentaires\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  // Relations\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, metricType, period, periodStart])\n  @@map(\"dashboard_metrics\")\n}\n\nmodel Forum {\n  id          String   @id @default(cuid())\n  name        String\n  description String?\n  categoryId  String?\n  locationId  String?\n  isActive    Boolean  @default(true)\n  createdAt   DateTime @default(now())\n\n  // Relations\n  category Category? @relation(fields: [categoryId], references: [id])\n  location Location? @relation(fields: [locationId], references: [id])\n  posts    Post[]\n\n  @@map(\"forums\")\n}\n\nmodel Post {\n  id        String   @id @default(cuid())\n  forumId   String\n  authorId  String\n  title     String\n  content   String\n  isPinned  Boolean  @default(false)\n  isLocked  Boolean  @default(false)\n  views     Int      @default(0)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  forum    Forum     @relation(fields: [forumId], references: [id], onDelete: Cascade)\n  author   User      @relation(fields: [authorId], references: [id], onDelete: Cascade)\n  comments Comment[]\n\n  @@map(\"posts\")\n}\n\nmodel Comment {\n  id        String   @id @default(cuid())\n  postId    String\n  authorId  String\n  content   String\n  parentId  String? // Pour les réponses imbriquées\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  post    Post      @relation(fields: [postId], references: [id], onDelete: Cascade)\n  author  User      @relation(fields: [authorId], references: [id], onDelete: Cascade)\n  parent  Comment?  @relation(\"CommentReplies\", fields: [parentId], references: [id])\n  replies Comment[] @relation(\"CommentReplies\")\n\n  @@map(\"comments\")\n}\n\nmodel Event {\n  id          String   @id @default(cuid())\n  title       String\n  description String\n  type        String // 'promotion', 'event', 'flash_sale'\n  startDate   DateTime\n  endDate     DateTime\n  isActive    Boolean  @default(true)\n  discount    Float? // Pourcentage de réduction\n  targetUsers Json? // Critères pour cibler les utilisateurs\n  metadata    Json? // Données supplémentaires\n  createdAt   DateTime @default(now())\n\n  @@map(\"events\")\n}\n\nmodel Referral {\n  id          String    @id @default(cuid())\n  referrerId  String // Utilisateur qui parraine\n  referredId  String // Utilisateur parrainé\n  code        String    @unique // Code de parrainage unique\n  status      String    @default(\"pending\") // 'pending', 'completed', 'expired'\n  rewardGiven Boolean   @default(false)\n  createdAt   DateTime  @default(now())\n  completedAt DateTime?\n\n  // Relations\n  referrer User @relation(\"ReferrerReferrals\", fields: [referrerId], references: [id])\n  referred User @relation(\"ReferredReferrals\", fields: [referredId], references: [id])\n\n  @@map(\"referrals\")\n}\n",
  "inlineSchemaHash": "5d397dc27ff34a3533506fb805f66d6254d69ce6f7a8a7d2715f38abad06d605",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"RoleUtilisateur\"},{\"name\":\"reputation\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isVip\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"registrationDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastLogin\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profilePicture\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToUser\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToUser\"},{\"name\":\"sentMessages\",\"kind\":\"object\",\"type\":\"ChatMessage\",\"relationName\":\"FromUser\"},{\"name\":\"receivedMessages\",\"kind\":\"object\",\"type\":\"ChatMessage\",\"relationName\":\"ToUser\"},{\"name\":\"credits\",\"kind\":\"object\",\"type\":\"Credit\",\"relationName\":\"CreditToUser\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ReviewToUser\"},{\"name\":\"favorites\",\"kind\":\"object\",\"type\":\"Favorite\",\"relationName\":\"FavoriteToUser\"},{\"name\":\"transactions\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"TransactionToUser\"},{\"name\":\"buyerOrders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"BuyerOrders\"},{\"name\":\"sellerOrders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"SellerOrders\"},{\"name\":\"analyticsEvents\",\"kind\":\"object\",\"type\":\"AnalyticsEvent\",\"relationName\":\"AnalyticsEventToUser\"},{\"name\":\"dashboardMetrics\",\"kind\":\"object\",\"type\":\"DashboardMetrics\",\"relationName\":\"DashboardMetricsToUser\"},{\"name\":\"posts\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"PostToUser\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"CommentToUser\"},{\"name\":\"referrerReferrals\",\"kind\":\"object\",\"type\":\"Referral\",\"relationName\":\"ReferrerReferrals\"},{\"name\":\"referredReferrals\",\"kind\":\"object\",\"type\":\"Referral\",\"relationName\":\"ReferredReferrals\"}],\"dbName\":\"users\"},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"images\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"StatutProduit\"},{\"name\":\"sellerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"views\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"publishDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiration\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"renewalCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"condition\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"locationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seller\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProductToUser\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"ChatMessage\",\"relationName\":\"ChatMessageToProduct\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ProductToReview\"},{\"name\":\"favorites\",\"kind\":\"object\",\"type\":\"Favorite\",\"relationName\":\"FavoriteToProduct\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToProduct\"},{\"name\":\"productCategory\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToProduct\"},{\"name\":\"productLocation\",\"kind\":\"object\",\"type\":\"Location\",\"relationName\":\"LocationToProduct\"}],\"dbName\":\"products\"},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payload\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"read\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationToUser\"}],\"dbName\":\"notifications\"},\"ChatMessage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fromUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"toUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"fromUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FromUser\"},{\"name\":\"toUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ToUser\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ChatMessageToProduct\"}],\"dbName\":\"chat_messages\"},\"Credit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"balance\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CreditToUser\"}],\"dbName\":\"credits\"},\"Review\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"photos\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToReview\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReviewToUser\"}],\"dbName\":\"reviews\"},\"Favorite\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"FavoriteToProduct\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FavoriteToUser\"}],\"dbName\":\"favorites\"},\"Transaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TransactionToUser\"}],\"dbName\":\"transactions\"},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"buyerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sellerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shippingAddress\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"trackingNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"buyer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BuyerOrders\"},{\"name\":\"seller\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SellerOrders\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"OrderToProduct\"}],\"dbName\":\"orders\"},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"icon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"parent\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryHierarchy\"},{\"name\":\"children\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryHierarchy\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"CategoryToProduct\"},{\"name\":\"forums\",\"kind\":\"object\",\"type\":\"Forum\",\"relationName\":\"CategoryToForum\"}],\"dbName\":\"categories\"},\"Location\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"LocationToProduct\"},{\"name\":\"forums\",\"kind\":\"object\",\"type\":\"Forum\",\"relationName\":\"ForumToLocation\"}],\"dbName\":\"locations\"},\"AnalyticsEvent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AnalyticsEventToUser\"}],\"dbName\":\"analytics_events\"},\"DashboardMetrics\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metricType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"period\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"periodStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"periodEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DashboardMetricsToUser\"}],\"dbName\":\"dashboard_metrics\"},\"Forum\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"locationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToForum\"},{\"name\":\"location\",\"kind\":\"object\",\"type\":\"Location\",\"relationName\":\"ForumToLocation\"},{\"name\":\"posts\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"ForumToPost\"}],\"dbName\":\"forums\"},\"Post\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"forumId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"authorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPinned\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isLocked\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"views\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"forum\",\"kind\":\"object\",\"type\":\"Forum\",\"relationName\":\"ForumToPost\"},{\"name\":\"author\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PostToUser\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"CommentToPost\"}],\"dbName\":\"posts\"},\"Comment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"authorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"CommentToPost\"},{\"name\":\"author\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CommentToUser\"},{\"name\":\"parent\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"CommentReplies\"},{\"name\":\"replies\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"CommentReplies\"}],\"dbName\":\"comments\"},\"Event\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"discount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"targetUsers\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"events\"},\"Referral\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"referrerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"referredId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rewardGiven\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"referrer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReferrerReferrals\"},{\"name\":\"referred\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReferredReferrals\"}],\"dbName\":\"referrals\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

